#include<E:\C++ programs\test\tm4c123gh6pm.h>
#include<stdio.h>
#include<stdint.h>
#include <math.h>
#define PI 3.142857

void PORTB_INIT();
void PORTD_INIT_UART();
void delay(double sec);
void LCD_command(char com);
void LCD_Data(char data);
void intialization();
void LEDOn ( double accdistance );
void PORTA_INIT();
void PORTF_INIT();
uint8_t UART2_READ();
long double toRadians(const long double degree);
long double Calcdistance(long double lat1, long double long1, long double lat2, long double long2);
double Distancetill100 (long double lat1,long double lat2,long double long1,long double long2);

int main()
{
    intialization();
		while(1)
		{
			PORTF_INIT();
			LCD_command(0x01); 
			LCD_command(0x80);
			delay(50);
			LCD_Data('D');
			delay(1);
			LCD_Data('I');
			delay(1);
			LCD_Data('S');
			delay(1);
			LCD_Data('T');
                        delay(1);
                        LCD_Data('A');
                        delay(1);
                        LCD_Data('N');
                        delay(1);
                        LCD_Data('C');
                        delay(1);
                        LCD_Data('E');
			delay(50);
						
		}
}

void LEDOn ( double accdistance )
{
   if (accdistance >= 100)
   { GPIO_PORTF_DATA_R=0x0004; }
   
}


void PORTA_INIT() //Port A initialization
{
    SYSCTL_RCGCGPIO_R |= 0x00000001;
    while((SYSCTL_PRGPIO_R&0x00000001)==0){};
    GPIO_PORTA_LOCK_R =0x4C4F434B;
    GPIO_PORTA_CR_R = 0xE0; 
    GPIO_PORTA_DEN_R = 0xE0;
    GPIO_PORTA_DIR_R = 0xE0;
    GPIO_PORTA_AFSEL_R= 0x00;
    GPIO_PORTA_AMSEL_R=0x00;
    GPIO_PORTA_PCTL_R= 0x00000000;  
    
void PORTB_INIT() //Port B initalization
{
    SYSCTL_RCGCGPIO_R |= 0x00000002;
    while((SYSCTL_PRGPIO_R&0x00000002)==0){};
    GPIO_PORTB_LOCK_R=0x4C4F434B;
    GPIO_PORTB_CR_R = 0xFF;
    GPIO_PORTB_DIR_R = 0xFF;
    GPIO_PORTB_DATA_R = 0x00;
    GPIO_PORTB_DEN_R = 0xFF;
    GPIO_PORTB_AFSEL_R= 0x00;
    GPIO_PORTB_AMSEL_R= 0x00;
    GPIO_PORTB_PCTL_R= 0x00000000;  
}
void PORTD_INIT_UART()
{
    SYSCTL_RCGCUART_R |= 0x00000008;
    SYSCTL_RCGCGPIO_R |= 0x00000008;
    GPIO_PORTD_LOCK_R=0x4C4F434B;
    GPIO_PORTD_CR_R = 0xC0;
    GPIO_PORTD_DIR_R = 0x00;
    GPIO_PORTD_DEN_R = 0xC0;
    GPIO_PORTD_AFSEL_R= 0xC0;
    GPIO_PORTD_AMSEL_R= 0x00;
    GPIO_PORTD_PCTL_R= 0x11000000;
    UART2_CTL_R &=~0x0004;
    UART2_IBRD_R = 520;
    UART2_FBRD_R = 53;
    UART2_LCRH_R = 0x0070;
    UART2_CTL_R = 0x0301;
}
void PORTF_INIT() //Port F Initialization
{ 
	SYSCTL_RCGCGPIO_R |= 0x00000020;
    while((SYSCTL_PRGPIO_R & 0x00000020)==0){};
    GPIO_PORTF_LOCK_R=0x4C4F434B;
    GPIO_PORTF_CR_R=0x1F;
    GPIO_PORTF_DIR_R=0x0E;
    GPIO_PORTF_PCTL_R=0x0000000;
    GPIO_PORTF_AMSEL_R=0x00;
    GPIO_PORTF_AFSEL_R=0x00;
    GPIO_PORTF_DEN_R=0x1F;
    GPIO_PORTF_DATA_R=0x0000;
}
uint8_t UART2_READ()
{
    PORTD_INIT_UART();
    while((UART2_FR_R&0x10)!=0){}
    return (uint8_t)(UART2_DR_R&0x000000FF);
}

long double toRadians(const long double degree)
{
  
    long double one_deg = (PI) / 180;
    return (one_deg * degree);
}

long double Calcdistance(long double lat1, long double long1,
    long double lat2, long double long2)
{
   //convert the input latitude and longtitude to radian 
    lat1 = toRadians(lat1);
    long1 = toRadians(long1);
    lat2 = toRadians(lat2);
    long2 = toRadians(long2);

    // Haversine Formula
    long double dlong = long2 - long1;
    long double dlat = lat2 - lat1;
    
    if (dlong < 0)
    {
        dlong *= -1;
    }
    if (dlat < 0)
    {
        dlat *= -1;
    }

    long double distance = pow(sin(dlat / 2), 2) +
        cos(lat1) * cos(lat2) *
        pow(sin(dlong / 2), 2);

    distance = 2 * atan2(sqrt(distance), sqrt(distance - 1);

    // Radius of Earth in Kilometers, R = 6371
   
    long double R = 6371*1000;

    // Calculate the distance
    distance = distance * R;

    return distance;
}

double Distancetill100 (long double lat1,long double lat2,long double long1,long double long2)
{
    long double accDistance = Calcdistance(lat1 , long1, lat2, long2);
    printf("%lf\n", accDistance);
    while (accDistance < 100)
    {
        delay();
        lat1 = lat2;
        long1 = long2;
        scanf("%lf %lf", &lat2 , &long2);
        accDistance += Calcdistance(lat1, long1, lat2, long2);
        printf("%lf\n", accDistance);
    }
    
    return accDistance;

}
//delay function
void delay(double sec)
{
    unsigned int i,j;
    for(i=0;i<sec;i++)
    for(j=0;j<100;j++);
}
//LCD command function
void LCD_command(char com) 
{
    GPIO_PORTA_DATA_R &= ~0xE0;    //Rs,Rw,E=0 
    GPIO_PORTB_DATA_R = com;
    GPIO_PORTA_DATA_R |=0x80;   //E=1
    delay(5);
    GPIO_PORTA_DATA_R = 0x00;   //E=0   
}
//LCD data function
void LCD_Data(char data)
{
    GPIO_PORTA_DATA_R = 0x00;
    GPIO_PORTA_DATA_R |= 0x20;  //Rs=1
    GPIO_PORTB_DATA_R = data;
    GPIO_PORTA_DATA_R |= 0x80;   //E=1
    delay(5);
    GPIO_PORTA_DATA_R &=~0x80;  //E=0  
}
//LCD intialization function
void intialization() 
{
    PORTA_INIT();
    PORTB_INIT();
    delay(10);
		LCD_command(0x30);
    delay(0.5);
		LCD_command(0x30);
    delay(0.5);
    LCD_command(0x30);
    delay(0.5);
    LCD_command(0x38);
    delay(0.5);
    LCD_command(0x06);
    delay(0.5);
    LCD_command(0x01);
    delay(0.5);
    LCD_command(0x0F);
}
